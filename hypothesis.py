#!/usr/bin/env python3
from typing import NamedTuple, List, Any, Iterable, Tuple, Optional

from my.hypothesis import get_pages # type: ignore

from kython.org_tools import as_org_entry as as_org, link as org_link

from org_view import OrgView
from org_utils import OrgTree

class HypView(OrgView):
    def make_tree(self) -> OrgTree:
        file_header = f"# AUTOGENERATED BY {__file__}\n" # TODO date?

        all_items = []
        for page in get_pages():
            page_org = as_org(
                todo=False,
                level=0,
                inline_created=True,
                created=page.dt,
                heading=org_link(title=page.title, url=page.link),
            ).strip()
            hl_orgs = []
            for hl in page.highlights:
                hl_org = as_org(
                    todo=False,
                    level=0,
                    inline_created=True,
                    created=hl.dt,
                    heading=org_link(title='hyp', url=hl.hyp_link),
                    body=hl.content,
                ).strip()
                hl_orgs.append(OrgTree(item=hl_org))
            all_items.append(OrgTree(
                item=page_org,
                children=hl_orgs,
            ))

        return OrgTree(
            item=file_header,
            children=all_items,
        )


# TODO tests for determinism

def main():
    HypView(
        logger_tag='hypothesis-view',
        default_to='hypothesis.org',
    ).main()
    # TODO need to group by source??

if __name__ == '__main__':
    main()
