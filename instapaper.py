#!/usr/bin/env python3
from argparse import ArgumentParser
import logging
from typing import NamedTuple, List, Any, Iterable, Tuple, Optional

from my.instapaper import get_pages # type: ignore

from kython import group_by_key
from kython import atomic_write
from kython.klogging import setup_logzero
from kython.org_tools import as_org_entry as as_org, link as org_link

def get_logger():
    return logging.getLogger('instapaper-org-view')


class OrgTree(NamedTuple):
    item: str
    children: Iterable[Any] = ()

    def render_hier(self) -> List[Tuple[int, str]]:
        res = [(0, self.item)]
        for ch in self.children:
            # TODO make sure there is a space??
            # TODO shit, would be nice to tabulate?.. not sure
            res.extend((l + 1, x) for l, x in ch.render_hier())
        return res

    def render(self) -> str:
        return '\n'.join('*' * l + ' ' + x for l, x in self.render_hier())


def make_tree(pages) -> OrgTree:
    file_header = f"# AUTOGENERATED BY {__file__}\n" # TODO date?
    # TODO FIXME compare before saving?

    all_items = []
    for page in pages:
        bm = page.bookmark
        bm_org = as_org(
            todo=False,
            level=0,
            created=bm.dt,
            inline_created=True,
            heading=f'{org_link(title="ip", url=bm.instapaper_link)}   {org_link(title=bm.title, url=bm.url)}',
            # TODO make sure as_org figures out the date
        ).strip()
        # TODO autostrip could be an option for formatter

        hls_org = []
        for hl in page.highlights:
            hl_org = as_org(
                todo=False,
                level=0,
                created=hl.dt,
                inline_created=True,
                heading=org_link(title="ip", url=bm.instapaper_link),
                body=hl.text,
            ).strip()
            hls_org.append(OrgTree(item=hl_org))
        all_items.append(OrgTree(
            item=bm_org,
            children=hls_org,
        ))
        # TODO could put links in org mode links? so not as much stuff is displayed?
        # TODO reverse order? not sure...
        # TODO unique id meaning that instapaper manages the item?
        # TODO spacing top level items could be option of dumper as well?
        # TODO better error handling, cooperate with org_tools

    return OrgTree(
        item=file_header,
        children=all_items,
    )

def pick_heading(root: OrgTree, text: str) -> Optional[OrgTree]:
    if text in root.item:
        return root
    for ch in root.children:
        chr = pick_heading(ch, text)
        if chr is not None:
            return chr
    else:
        return None

# TODO FIXME run ruci against it?
# TODO FIXME careful, sanitize stars somehow.... perhaps replace?
# TODO FIXME need to make sure it's excluded from wereyouhere... otherwise too many duplications and unncessary links?
# TODO hmm. wereyouhere could explore automatically, perhaps even via porg?
# make it a feature of renderer?
# although just need to make one space tabulation, that'd solve all my problems
def test():
    org_tree = make_tree(get_pages())
    ll = pick_heading(org_tree, 'Life Extension Methods')
    assert ll is not None
    assert len(ll.children) > 4
    assert any('sleep a lot' in c.item for c in ll.children)

def main():
    logger = get_logger()
    setup_logzero(logger, level=logging.DEBUG)

    p = ArgumentParser()
    p.add_argument('--to', default='instapaper.org')
    args = p.parse_args()

    org_tree = make_tree(get_pages())
    with atomic_write(args.to, 'w', overwrite=True) as fo:
        fo.write(org_tree.render())


if __name__ == '__main__':
    main()
