#!/usr/bin/env python3
from typing import NamedTuple, List, Any, Iterable, Tuple, Optional, Collection

from kython.kerror import unwrap
from kython.org_tools import link as org_link

from org_view import OrgViewOverwrite, OrgWithKey
from org_utils import OrgTree, as_org, pick_heading

import my.tweets

from kython import parse_date_new
today = parse_date_new('today')

def get_tweets():
    today = parse_date_new('today')
    tw = my.tweets.predicate_date(lambda d: d.day == today.day and d.month == today.month) # not gonna work on 29 feb!!
    return tw

# # TODO span all prev years?
# # TODO reverse order?..
#     # agenda sucks aup files for all dates from a certain folder?
#     # replace with x to prevent org from parsing...

class TwitterView(OrgViewOverwrite):
    def __init__(self, *args, **kwargs):
        # TODO make other views conform as well? or make it a feature of org generation..
        super().__init__( # type: ignore
            *args,
            logger_tag='render-tweets',
            file_header=f"# AUTOGENERATED BY {__file__}\n", # TODO date?
            **kwargs,
        )

    # pylint: disable=unsubscriptable-object
    def get_items(self) -> Collection[OrgWithKey]:
        from kython.org import datetime2org, date2org, datetime2orgtime
        def render(t) -> OrgTree:
            dtime = t.dt
            text = t.text
            dd = dtime.replace(year=today.year)
            time = datetime2orgtime(dd)
            return OrgTree(as_org(
                created=dd.date(),
                active_created=True,
                heading=f"{dtime.year} {time.replace(':', '')} {text}",
                tags=['ttweet'],
                body=f"""
 on [{datetime2org(dtime)}]
 {t.url}
                """.lstrip('\n'),
            ))

        return [(
            tweet.tid,
            render(tweet),
        ) for tweet in get_tweets()]


def main():
    TwitterView().main(default_to='ttweets.org')


if __name__ == '__main__':
    main()

